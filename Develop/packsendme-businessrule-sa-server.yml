server:
  port: 9100

eureka:
  instance:
    hostname: 192.241.133.13
    port: 9091
    leaseRenewalIntervalInSeconds: 5   
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/
  server:
    wait-time-in-ms-when-sync-empty: 3000

security:
    oauth2:
        client:
            access-token-validity-seconds: 1800
            authorized-grant-types: password,refresh_token
            client-id: admin
            client-secret: $2a$10$jJFbSMGC2xsOqIlYYLqRouBDGRsvnP.egfdw3MutRXzHdhNoNnBA6
            resource-ids: resources
            scope: read,write

kafka:
  topic:
    executionBRE: topicExecutionBRE_SA
    roadwayBRE_SA_Instance: topicRoadwayBRE_SA_Instance
    roadwayBRE_SA_Costs: topicRoadwayBRE_SA_Costs
    airwayBRE_SA_Instance: topicAirwayBRE_SA_Instance
    airwayBRE_SA_Costs: topicAirwayBRE_SA_Costs
    maritimewayBRE_SA_Instance: topicMaritimewayBRE_SA_Instance
    maritimewayBRE_SA_Costs: topicMaritimewayBRE_SA_Costs
    
    
spring:
   kafka:
     consumer:
        bootstrap-servers: 167.172.152.184:9092
        group-id: group-id
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        
     producer:
        bootstrap-servers: 167.172.152.184:9092
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer
        batch-size: 100000
